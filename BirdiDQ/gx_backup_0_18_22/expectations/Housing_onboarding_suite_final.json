{
  "data_asset_type": null,
  "expectation_suite_name": "Housing_onboarding_suite_final",
  "expectations": [
    {
      "expectation_type": "expect_table_row_count_to_be_between",
      "kwargs": {
        "max_value": 3000,
        "min_value": 3000
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_table_row_count_to_be_between(min_value=3000, max_value=3000)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {},
            "metric_name": "table.row_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_table_columns_to_match_set",
      "kwargs": {
        "column_set": [
          "households",
          "latitude",
          "total_bedrooms",
          "housing_median_age",
          "total_rooms",
          "median_house_value",
          "longitude",
          "median_income",
          "population"
        ],
        "exact_match": null
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_table_columns_to_match_set(exact_match=None, column_set=['households', 'latitude', 'total_bedrooms', 'housing_median_age', 'total_rooms', 'median_house_value', 'longitude', 'median_income', 'population'])\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "success_ratio": 1.0
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "longitude"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='longitude')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "longitude"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "latitude"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='latitude')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "latitude"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "housing_median_age"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='housing_median_age')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "total_rooms"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='total_rooms')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_rooms"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "total_bedrooms"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='total_bedrooms')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_bedrooms"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "population"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='population')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "population"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "households"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='households')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "households"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "median_income"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='median_income')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_income"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "median_house_value"
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_not_be_null(column='median_house_value')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_house_value"
            },
            "metric_name": "column_values.nonnull.unexpected_count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "longitude",
        "max_value": -124.18,
        "min_value": -124.18,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=-124.18, strict_min=False, column='longitude', max_value=-124.18)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "longitude"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "longitude",
        "max_value": -114.49,
        "min_value": -114.49,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=-114.49, strict_min=False, column='longitude', max_value=-114.49)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "longitude"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "longitude",
        "max_value": -114.49,
        "min_value": -124.18,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=-124.18, strict_min=False, column='longitude', max_value=-114.49)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "longitude"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "longitude"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "longitude",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              -121.81,
              -121.81
            ],
            [
              -118.48,
              -118.48
            ],
            [
              -118.02,
              -118.02
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[-121.81, -121.81], [-118.48, -118.48], [-118.02, -118.02]]}, column='longitude')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "longitude"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "longitude",
        "max_value": -118.485,
        "min_value": -118.485,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=-118.485, strict_min=False, column='longitude', max_value=-118.485)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "longitude"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "longitude",
        "max_value": -119.58919999999999,
        "min_value": -119.58919999999999,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=-119.58919999999999, strict_min=False, column='longitude', max_value=-119.58919999999999)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "longitude"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "longitude",
        "max_value": 1.9949362939550175,
        "min_value": 1.9949362939550175,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=1.9949362939550175, strict_min=False, column='longitude', max_value=1.9949362939550175)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "longitude"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "latitude",
        "max_value": 32.56,
        "min_value": 32.56,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=32.56, strict_min=False, column='latitude', max_value=32.56)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "latitude"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "latitude",
        "max_value": 41.92,
        "min_value": 41.92,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=41.92, strict_min=False, column='latitude', max_value=41.92)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "latitude"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "latitude",
        "max_value": 41.92,
        "min_value": 32.56,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=32.56, strict_min=False, column='latitude', max_value=41.92)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "latitude"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "latitude"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "latitude",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              33.93,
              33.93
            ],
            [
              34.27,
              34.27
            ],
            [
              37.69,
              37.69
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[33.93, 33.93], [34.27, 34.27], [37.69, 37.69]]}, column='latitude')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "latitude"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "latitude",
        "max_value": 34.27,
        "min_value": 34.27,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=34.27, strict_min=False, column='latitude', max_value=34.27)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "latitude"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "latitude",
        "max_value": 35.635389999999994,
        "min_value": 35.635389999999994,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=35.635389999999994, strict_min=False, column='latitude', max_value=35.635389999999994)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "latitude"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "latitude",
        "max_value": 2.129669523343834,
        "min_value": 2.129669523343834,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=2.129669523343834, strict_min=False, column='latitude', max_value=2.129669523343834)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "latitude"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "housing_median_age",
        "max_value": 1.0,
        "min_value": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=1.0, strict_min=False, column='housing_median_age', max_value=1.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "housing_median_age",
        "max_value": 52.0,
        "min_value": 52.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=52.0, strict_min=False, column='housing_median_age', max_value=52.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "housing_median_age",
        "max_value": 52.0,
        "min_value": 1.0,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=1.0, strict_min=False, column='housing_median_age', max_value=52.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "housing_median_age"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "housing_median_age"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "housing_median_age",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              18.0,
              18.0
            ],
            [
              29.0,
              29.0
            ],
            [
              37.0,
              37.0
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[18.0, 18.0], [29.0, 29.0], [37.0, 37.0]]}, column='housing_median_age')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "housing_median_age",
        "max_value": 29.0,
        "min_value": 29.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=29.0, strict_min=False, column='housing_median_age', max_value=29.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "housing_median_age",
        "max_value": 28.845333333333333,
        "min_value": 28.845333333333333,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=28.845333333333333, strict_min=False, column='housing_median_age', max_value=28.845333333333333)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "housing_median_age",
        "max_value": 12.555395554955753,
        "min_value": 12.555395554955753,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=12.555395554955753, strict_min=False, column='housing_median_age', max_value=12.555395554955753)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "total_rooms",
        "max_value": 6.0,
        "min_value": 6.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=6.0, strict_min=False, column='total_rooms', max_value=6.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_rooms"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "total_rooms",
        "max_value": 30450.0,
        "min_value": 30450.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=30450.0, strict_min=False, column='total_rooms', max_value=30450.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_rooms"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "total_rooms",
        "max_value": 30450.0,
        "min_value": 6.0,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=6.0, strict_min=False, column='total_rooms', max_value=30450.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "total_rooms"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "total_rooms"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "total_rooms",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              1401.0,
              1401.0
            ],
            [
              2107.0,
              2107.0
            ],
            [
              3128.0,
              3128.0
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[1401.0, 1401.0], [2107.0, 2107.0], [3128.0, 3128.0]]}, column='total_rooms')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_rooms"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "total_rooms",
        "max_value": 2106.0,
        "min_value": 2106.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=2106.0, strict_min=False, column='total_rooms', max_value=2106.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_rooms"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "total_rooms",
        "max_value": 2599.578666666667,
        "min_value": 2599.578666666667,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=2599.578666666667, strict_min=False, column='total_rooms', max_value=2599.578666666667)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_rooms"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "total_rooms",
        "max_value": 2155.593331625581,
        "min_value": 2155.593331625581,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=2155.593331625581, strict_min=False, column='total_rooms', max_value=2155.593331625581)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_rooms"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "total_bedrooms",
        "max_value": 2.0,
        "min_value": 2.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=2.0, strict_min=False, column='total_bedrooms', max_value=2.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_bedrooms"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "total_bedrooms",
        "max_value": 5419.0,
        "min_value": 5419.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=5419.0, strict_min=False, column='total_bedrooms', max_value=5419.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_bedrooms"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "total_bedrooms",
        "max_value": 5419.0,
        "min_value": 2.0,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=2.0, strict_min=False, column='total_bedrooms', max_value=5419.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "total_bedrooms"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "total_bedrooms"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "total_bedrooms",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              291.0,
              291.0
            ],
            [
              437.0,
              437.0
            ],
            [
              636.0,
              636.0
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[291.0, 291.0], [437.0, 437.0], [636.0, 636.0]]}, column='total_bedrooms')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_bedrooms"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "total_bedrooms",
        "max_value": 437.0,
        "min_value": 437.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=437.0, strict_min=False, column='total_bedrooms', max_value=437.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_bedrooms"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "total_bedrooms",
        "max_value": 529.9506666666666,
        "min_value": 529.9506666666666,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=529.9506666666666, strict_min=False, column='total_bedrooms', max_value=529.9506666666666)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_bedrooms"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "total_bedrooms",
        "max_value": 415.6543681363229,
        "min_value": 415.6543681363229,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=415.6543681363229, strict_min=False, column='total_bedrooms', max_value=415.6543681363229)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "total_bedrooms"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "population",
        "max_value": 5.0,
        "min_value": 5.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=5.0, strict_min=False, column='population', max_value=5.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "population"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "population",
        "max_value": 11935.0,
        "min_value": 11935.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=11935.0, strict_min=False, column='population', max_value=11935.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "population"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "population",
        "max_value": 11935.0,
        "min_value": 5.0,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=5.0, strict_min=False, column='population', max_value=11935.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "population"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "population"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "population",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              780.0,
              780.0
            ],
            [
              1155.0,
              1155.0
            ],
            [
              1742.0,
              1742.0
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[780.0, 780.0], [1155.0, 1155.0], [1742.0, 1742.0]]}, column='population')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "population"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "population",
        "max_value": 1155.0,
        "min_value": 1155.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=1155.0, strict_min=False, column='population', max_value=1155.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "population"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "population",
        "max_value": 1402.7986666666666,
        "min_value": 1402.7986666666666,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=1402.7986666666666, strict_min=False, column='population', max_value=1402.7986666666666)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "population"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "population",
        "max_value": 1030.5430124122424,
        "min_value": 1030.5430124122424,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=1030.5430124122424, strict_min=False, column='population', max_value=1030.5430124122424)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "population"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "households",
        "max_value": 2.0,
        "min_value": 2.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=2.0, strict_min=False, column='households', max_value=2.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "households"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "households",
        "max_value": 4930.0,
        "min_value": 4930.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=4930.0, strict_min=False, column='households', max_value=4930.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "households"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "households",
        "max_value": 4930.0,
        "min_value": 2.0,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=2.0, strict_min=False, column='households', max_value=4930.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "households"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "households"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "households",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              273.0,
              273.0
            ],
            [
              410.0,
              410.0
            ],
            [
              597.0,
              597.0
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[273.0, 273.0], [410.0, 410.0], [597.0, 597.0]]}, column='households')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "households"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "households",
        "max_value": 409.5,
        "min_value": 409.5,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=409.5, strict_min=False, column='households', max_value=409.5)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "households"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "households",
        "max_value": 489.912,
        "min_value": 489.912,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=489.912, strict_min=False, column='households', max_value=489.912)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "households"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "households",
        "max_value": 365.42270980552627,
        "min_value": 365.42270980552627,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=365.42270980552627, strict_min=False, column='households', max_value=365.42270980552627)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "households"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "median_income",
        "max_value": 0.4999,
        "min_value": 0.4999,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=0.4999, strict_min=False, column='median_income', max_value=0.4999)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_income"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "median_income",
        "max_value": 15.0001,
        "min_value": 15.0001,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=15.0001, strict_min=False, column='median_income', max_value=15.0001)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_income"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "median_income",
        "max_value": 15.0001,
        "min_value": 0.4999,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=0.4999, strict_min=False, column='median_income', max_value=15.0001)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "median_income"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "median_income"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "median_income",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              2.5441,
              2.5441
            ],
            [
              3.4872,
              3.4872
            ],
            [
              4.6556,
              4.6556
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[2.5441, 2.5441], [3.4872, 3.4872], [4.6556, 4.6556]]}, column='median_income')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_income"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "median_income",
        "max_value": 3.4871499999999997,
        "min_value": 3.4871499999999997,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=3.4871499999999997, strict_min=False, column='median_income', max_value=3.4871499999999997)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_income"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "median_income",
        "max_value": 3.8072717999999997,
        "min_value": 3.8072717999999997,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=3.8072717999999997, strict_min=False, column='median_income', max_value=3.8072717999999997)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_income"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "median_income",
        "max_value": 1.854511729691479,
        "min_value": 1.854511729691479,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=1.854511729691479, strict_min=False, column='median_income', max_value=1.854511729691479)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_income"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "median_house_value",
        "max_value": 22500.0,
        "min_value": 22500.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_min_to_be_between(strict_max=False, min_value=22500.0, strict_min=False, column='median_house_value', max_value=22500.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_house_value"
            },
            "metric_name": "column.min",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "median_house_value",
        "max_value": 500001.0,
        "min_value": 500001.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_max_to_be_between(strict_max=False, min_value=500001.0, strict_min=False, column='median_house_value', max_value=500001.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_house_value"
            },
            "metric_name": "column.max",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "median_house_value",
        "max_value": 500001.0,
        "min_value": 22500.0,
        "mostly": 1.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_between(mostly=1.0, strict_max=False, min_value=22500.0, strict_min=False, column='median_house_value', max_value=500001.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "column_max_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "median_house_value"
              },
              "metric_name": "column.max",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          },
          "column_min_values_range_estimator": {
            "metric_configuration": {
              "domain_kwargs": {
                "column": "median_house_value"
              },
              "metric_name": "column.min",
              "metric_value_kwargs": null
            },
            "num_batches": 1
          }
        }
      }
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": false,
        "column": "median_house_value",
        "quantile_ranges": {
          "quantiles": [
            0.25,
            0.5,
            0.75
          ],
          "value_ranges": [
            [
              121200.0,
              121200.0
            ],
            [
              177700.0,
              177700.0
            ],
            [
              263900.0,
              263900.0
            ]
          ]
        }
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_quantile_values_to_be_between(allow_relative_error=False, quantile_ranges={'quantiles': [0.25, 0.5, 0.75], 'value_ranges': [[121200.0, 121200.0], [177700.0, 177700.0], [263900.0, 263900.0]]}, column='median_house_value')\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_house_value"
            },
            "metric_name": "column.quantile_values",
            "metric_value_kwargs": {
              "allow_relative_error": false,
              "quantiles": [
                0.25,
                0.5,
                0.75
              ]
            }
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "median_house_value",
        "max_value": 177650.0,
        "min_value": 177650.0,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_median_to_be_between(strict_max=False, min_value=177650.0, strict_min=False, column='median_house_value', max_value=177650.0)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_house_value"
            },
            "metric_name": "column.median",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "median_house_value",
        "max_value": 205846.275,
        "min_value": 205846.275,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_mean_to_be_between(strict_max=False, min_value=205846.275, strict_min=False, column='median_house_value', max_value=205846.275)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_house_value"
            },
            "metric_name": "column.mean",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_stdev_to_be_between",
      "kwargs": {
        "column": "median_house_value",
        "max_value": 113119.68746964628,
        "min_value": 113119.68746964628,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_stdev_to_be_between(strict_max=False, min_value=113119.68746964628, strict_min=False, column='median_house_value', max_value=113119.68746964628)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "median_house_value"
            },
            "metric_name": "column.standard_deviation",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "housing_median_age",
        "mostly": 1.0,
        "value_set": [
          1.0,
          2.0,
          3.0,
          4.0,
          5.0,
          6.0,
          7.0,
          8.0,
          9.0,
          10.0,
          11.0,
          12.0,
          13.0,
          14.0,
          15.0,
          16.0,
          17.0,
          18.0,
          19.0,
          20.0,
          21.0,
          22.0,
          23.0,
          24.0,
          25.0,
          26.0,
          27.0,
          28.0,
          29.0,
          30.0,
          31.0,
          32.0,
          33.0,
          34.0,
          35.0,
          36.0,
          37.0,
          38.0,
          39.0,
          40.0,
          41.0,
          42.0,
          43.0,
          44.0,
          45.0,
          46.0,
          47.0,
          48.0,
          49.0,
          50.0,
          51.0,
          52.0
        ]
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_values_to_be_in_set(mostly=1.0, column='housing_median_age', value_set=[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0])\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.distinct_values",
            "metric_value_kwargs": null
          },
          "num_batches": 1,
          "parse_strings_as_datetimes": false
        }
      }
    },
    {
      "expectation_type": "expect_column_unique_value_count_to_be_between",
      "kwargs": {
        "column": "housing_median_age",
        "max_value": 52,
        "min_value": 52,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_unique_value_count_to_be_between(strict_max=False, min_value=52, strict_min=False, column='housing_median_age', max_value=52)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.distinct_values.count",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    },
    {
      "expectation_type": "expect_column_proportion_of_unique_values_to_be_between",
      "kwargs": {
        "column": "housing_median_age",
        "max_value": 0.017333333333333333,
        "min_value": 0.017333333333333333,
        "strict_max": false,
        "strict_min": false
      },
      "meta": {
        "notes": {
          "content": [
            "### \ud83d\udcdd Implementation Details\n\n**Python Code:**\n```python\nvalidator.expect_column_proportion_of_unique_values_to_be_between(strict_max=False, min_value=0.017333333333333333, strict_min=False, column='housing_median_age', max_value=0.017333333333333333)\n```\n\n**Execution Engine:** Pandas (Filesystem) - Generated by Data Assistant\n\n\n---\n*This expectation is executed using Great Expectations' Pandas (Filesystem) - Generated by Data Assistant execution engine.*\n"
          ],
          "format": "markdown"
        },
        "profiler_details": {
          "metric_configuration": {
            "domain_kwargs": {
              "column": "housing_median_age"
            },
            "metric_name": "column.unique_proportion",
            "metric_value_kwargs": null
          },
          "num_batches": 1
        }
      }
    }
  ],
  "ge_cloud_id": null,
  "meta": {
    "citations": [
      {
        "citation_date": "2025-10-03T07:20:08.839653Z",
        "comment": "Created by effective Rule-Based Profiler of OnboardingDataAssistant with the configuration included.\n"
      }
    ],
    "great_expectations_version": "0.18.22"
  }
}